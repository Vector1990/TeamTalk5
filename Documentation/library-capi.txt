/**
 * @page ttlib TeamTalk Library Setup
 *
 * The TeamTalk C-API library is located in the @c Library folder.
 *
 * The following sections explain how to set up the TeamTalk DLL so it
 * can be used in a development project on a given platform.
 *
 * - @ref ttdllwin
 * - @ref ttdllmac
 * - @ref ttdlllinux
 * - @ref ttdllios
 *
 * @section ttdllwin TeamTalk DLL on Windows
 *
 * On Windows the TeamTalk DLL requires Windows XP/Vista/7/8 since it
 * uses Windows' Unicode API function. In other words it will not run
 * on Windows9x. The TeamTalk DLLs are available as both 32 and 64-bit
 * so ensure correct DLL is being used for the architecture.
 *
 * To access the TeamTalk API in a project the TeamTalk.h file must be
 * included. Prior to including the TeamTalk.h file the @c windows.h
 * file must have been included since the TeamTalk API depends on
 * types specified by the Windows header file.
 *
 * The TeamTalk import library must be provided to the compiler's
 * linker so resolve its dependencies.
 *
 * When running an application which uses the TeamTalk DLL on Windows
 * ensure that the DLL is in the working directory of the application
 * or the directory is in the @c PATH variable. 
 *
 * @section ttdllmac TeamTalk DLL on Mac OS X
 *
 * On Mac OS X the directory of the DLL (shared object)
 * must be in the @c DYLD_LIBRARY_PATH environment variable.
 *
 * @section ttdlllinux TeamTalk DLL on Linux
 *
 * On Linux the directory of the DLL (shared object) must be in the
 * @c LD_LIBRARY_PATH environment variable.
 *
 * The TeamTalk DLL has dependencies to ALSA so ensure the ALSA
 * packages (typically called libasound2) are installed. The TeamTalk
 * DLL for x86_64 also requires libopus, libspeex, libspeexdsp and
 * libvpx.
 *
 * @section ttdllios TeamTalk DLL on iOS
 *
 * Here's a guide on how to set up an iOS project in Xcode which uses
 * the TeamTalk library.
 *
 * @subsection xcodesetup Xcode project setup
 *
 * First create a new Xcode project, in this case "MyTeamTalkClient".
 *
 * @image html xcode_init.png "Xcode project"
 *
 * @subsubsection xcodedeps Add library dependencies
 *
 * Next scroll to the "Linked Frameworks and Libraries" and click the
 * "+" button. The following dialog will appear:
 *
 * @image html xcode_frameworks.png "Add library dependencies"
 *
 * Add the following library dependencies:
 * - @c AVFoundation.framework
 * - @c AudioToolbox.framework
 * - @c libstdc++.6.dylib
 * - @c libstdc++.dylib
 * - @c libz.dylib
 *
 * Finally add the TeamTalk static library by clicking "Add Other..."
 * in the frameworks dialog and locating the TeamTalk static library
 * in the unzipped TeamTalk SDK folder:
 *
 * @image html xcode_ttlib.png "Add TeamTalk static libray"
 *
 * The Xcode project should now look as follows:
 *
 * @image html xcode_proj.png "Xcode project with dependencies set"
 *
 * @subsection xcodesearch Setup header file
 *
 * Navigate to "Build Settings", enable "All" and "Levels" in the
 * toolbar header. Locate "Header Search Paths" as shown here:
 *
 * @image html xcode_buildsettings.png "Setup header search path"
 *
 * Add the TeamTalk SDK's include file directory to the list of search
 * paths: 
 *
 * @image html xcode_include.png "TeamTalk SDK include path"
 *
 * @subsection xcodebuild Compile Xcode project
 *
 * The Xcode project is now ready to compile. Here's an example where
 * the TeamTalk library's version number is printed:
 *
 * @image html xcode_example.png "Xcode project ready"
 *
 */
